#!/usr/bin/env ruby
require 'thor'
$:.push File.join(File.expand_path(File.dirname(__FILE__)), '..', 'lib')
require 'scrunch'

module Scrunch
  class Command < Thor
    desc "crunch -f FILENAME", "crunch a log file"
    method_options %w(file -f) => :string, required: true
    def crunch
      filename = if options[:file].nil? #TODO use stderr
                   puts "combat log file:\n(eg. C:\\path\\to\\combat_2012-03-18_02_32_16_597593.txt)"
                   gets.chomp.gsub /\"/, ''
                 else
                   options[:file]
                 end

      sources = Cruncher.crunch filename

      # Thor acts as the controller/view layer for the CLI
      damage_total = sources.damage_total
      damage_rows = sources.values.sort_by(&:damage_total).reverse.collect do |source| 
        bar = if damage_total < 1
                ''
              else
                '|'*(source.damage_total.to_f/damage_total * 50).to_i
              end
        [source.name,
         {value: source.damage_total, alignment: :right},
         bar]
      end

      puts Terminal::Table.new(rows: damage_rows, title: 'Damage')

      healing_total = sources.healing_total
      healing_rows = sources.values.sort_by(&:healing_total).reverse.collect do |source| 
        bar = if healing_total < 1
                ''
              else
                '|'*(source.healing_total.to_f/healing_total * 50).to_i
              end
        [source.name,
         {value: source.healing_total, alignment: :right},
         bar]
      end

      puts Terminal::Table.new(rows: healing_rows, title: 'Healing')
      
      puts "Press Enter to exit."
      gets
    rescue Errno::ENOENT => e
      puts "#{filename} doesn't exist!"
    end

    default_task :crunch
  end
end

Scrunch::Command.start
